import type { NextPage } from "next";
import Head from "next/head";
import { GraphQLClient } from "graphql-request";
import { postsSummary } from "../graphql/queries";
import { useEffect, useState } from "react";

interface Props {
  posts: [Post];
}

export async function getStaticProps() {
  const graphcms = new GraphQLClient(
    "https://api-eu-central-1.graphcms.com/v2/ckuv7s4mx1smu01xi9wyh96uh/master"
  );

  const { posts } = await graphcms.request(postsSummary);
  return {
    props: {
      posts,
    },
  };
}

const Home: NextPage<Props> = ({ posts }) => {
  const [postsState, setPostsState] = useState<[Post] | string>(posts);

  const fetchPosts = async () => {
    const graphCmsLink = process.env.GRAPH_QL_LINK;
    if (!graphCmsLink) return;
    const graphcms = new GraphQLClient(graphCmsLink);
    try {
      const { posts } = await graphcms.request(postsSummary);
      return posts;
    } catch (error) {
      return "error";
    }
  };
  const fetchPostHandler = async () => {
    const newPosts = await fetchPosts();
    setPostsState(newPosts);
  };
  useEffect(() => {
    fetchPostHandler();
  }, []);
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        {JSON.stringify(posts, null, 2)}

        <br />
        {JSON.stringify(postsState, null, 2)}
      </main>

      <footer>Footer</footer>
    </div>
  );
};

export default Home;
